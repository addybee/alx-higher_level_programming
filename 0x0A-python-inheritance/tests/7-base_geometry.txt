Test foe base geometry validator
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator(50)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("", 12)

>>> bg.integer_validator("name", "string")
Traceback (most recent call last):
TypeError: name must be an integer
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer
>>> bg.integer_validator("name", {3, 1})
Traceback (most recent call last):
TypeError: name must be an integer
>>> bg.integer_validator("name", ())
Traceback (most recent call last):
TypeError: name must be an integer
>>> bg.integer_validator("name", [])
Traceback (most recent call last):
TypeError: name must be an integer
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
TypeError: name must be an integer
