The test for `matrix_divided` module
===================================

Using `matrix_divided`
-------------------
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

CHECK DOCUMENTATION
>>> module_documentation = __import__("2-matrix_divided").__doc__
>>> print(len(module_documentation) > 0)
True

>>> function_documentation = __import__("2-matrix_divided").matrix_divided.__doc__
>>> print(len(function_documentation) > 0)
True

USAGE
>>> matrix = [
... 	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> matrix_a = [
...     [1, 2, 3],
...     [4, 5, 6],
...	[7, 8]
... ]
>>> matrix_b = [
...     [1, 2, 3],
...     [4, 5.44, 6],
...     7.88
... ]
>>> matrix_c = [30, 60, 90]

>>> matrix_divided(matrix, 3) #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, "3") #doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(matrix_a, 3) #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(matrix_b, 3) #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix_c, 3) #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     ["1", 2.43, 3],
...     [4, 5, [6,3]],
...	[18, 39, 42]
... ]

>>> matrix_divided(matrix, 3) #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(99, 3) #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
